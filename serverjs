const express = require('express');
const mongoose = require('mongoose');

constapp = express();


mongoose.connect('mongodb://localhost/shop', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
  .then(() => {
    console.log('Connected to the database');
  })
  .catch((err) => {
    console.error('Error connecting to the database', err);
  });


const Schema = mongoose.Schema;
const exampleSchema = new Schema({
  name: String,
  age: Number
});

const ExampleModel = mongoose.model('Example', exampleSchema);


app.get('/', async (req, res) => {
  
  const example = new ExampleModel({ name: 'John', age: 30 });
  await example.save();

  
  const data = await ExampleModel.find();
  res.json(data);
});

app.listen(3000, () => {
  console.log('Server is running on port 3000');
});
[11/7, 2:16 PM]:
 const express = require('express');
const app = express();

// Add routes and middleware here

const PORT = process.env.PORT || 3000;
app.listen(PORT, () => {
  console.log(`Server is running on port ${PORT}`);
});
[11/7, 2:16 PM]:
 const mongoose = require('mongoose');

mongoose.connect('mongodb://localhost/shop', {
  useNewUrlParser: true,
  useUnifiedTopology: true
})
  .then(() => {
    console.log('Connected to the database');
  })
  .catch((err) => {
    console.error('Error connecting to the database', err);
  });
[11/7, 2:17 PM] GalðŸ–¤: const productSchema = new mongoose.Schema({
  name: String,
  price: Number,
  description: String,
  
});

const Product = mongoose.model('Product', productSchema);
[11/7, 2:17 PM] GalðŸ–¤: app.get('/api/products', async (req, res) => {
  const products = await Product.find();
  res.json(products);
});


